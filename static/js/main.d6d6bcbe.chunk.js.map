{"version":3,"sources":["contexts/Context.js","components/Loading.js","contexts/Provider.js","App.js","index.js"],"names":["Context","React","createContext","Wrapper","styled","div","Load","loading","keyframes","Line","props","first","second","Loading","last","activeElem","document","getElementsByClassName","handleSelect","e","Array","from","forEach","el","classList","remove","target","add","Provider","children","useState","test","setTest","isLoaded","setLoad","index","setIndex","res","setRes","getTest","category","a","fetch","then","json","value","handleClick","handleNext","correct_answer","results","undefined","innerHTML","reset","Home","lazy","Test","Result","App","className","fallback","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"2GAAA,WAEMA,EAFN,OAEgBC,EAAMC,gBAEPF,O,i0BCDf,IAAMG,EAAUC,IAAOC,IAAV,KASPC,EAAOF,IAAOC,IAAV,KAIJE,EAAUC,YAAH,KAYPC,EAAOL,IAAOC,IAAV,IAOKE,GACT,SAACG,GAAD,OAAYA,EAAMC,MAAQ,OAASD,EAAME,OAAS,OAAS,UAgBlDC,IAZC,WACd,OACE,kBAACV,EAAD,KACE,kBAACG,EAAD,KACE,kBAACG,EAAD,CAAME,OAAK,IACX,kBAACF,EAAD,CAAMG,QAAM,IACZ,kBAACH,EAAD,CAAMK,MAAI,Q,8LC1CZC,EAAaC,SAASC,uBAAuB,YAE7CC,EAAe,SAACC,GACpBC,MAAMC,KAAKN,GAAYO,SAAQ,SAACC,GAAD,OAAQA,EAAGC,UAAUC,OAAO,eAC3DN,EAAEO,OAAOF,UAAUG,IAAI,aA4DVC,EAzDE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAEPF,oBAAS,GAFF,mBAE5BG,EAF4B,KAElBC,EAFkB,OAGTJ,mBAAS,GAHA,mBAG5BK,EAH4B,KAGrBC,EAHqB,OAIbN,mBAAS,IAJI,mBAI5BO,EAJ4B,KAIvBC,EAJuB,KA8B3BC,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACRC,MAAM,kDAAD,OAAmDF,IAC3DG,MAAK,SAACN,GAAD,OAASA,EAAIO,UAClBD,MAAK,SAACN,GACLL,EAAQK,GACRH,GAAQ,MALE,2CAAH,sDASb,OACE,kBAAClC,EAAA,EAAQ4B,SAAT,CACEiB,MAAO,CACLC,YApCc,SAACD,GACnBN,EAAQM,IAoCJd,OACAE,WACAE,QACAY,WApCa,WAAO,IAEhBC,EADYjB,EAAZkB,QAC2Bd,GAA3Ba,eACRV,EAAO,GAAD,mBACDD,GADC,MAEca,IAAlBnC,EAAW,IACPiC,IAAmBjC,EAAW,GAAGoC,aAGvC/B,MAAMC,KAAKN,GAAYO,SAAQ,SAACC,GAAD,OAAQA,EAAGC,UAAUC,OAAO,eAC3DW,IAAWD,IA2BPiB,MAxBQ,WACZpB,EAAQ,IACRM,EAAO,IACPJ,GAAQ,GACRE,EAAS,IAqBLlB,eACAmB,QAGF,kBAAC,IAAD,KAASR,K,eC1DTwB,G,MAAOC,gBAAK,kBAAM,iCAClBC,EAAOD,gBAAK,kBAAM,gCAClBE,EAASF,gBAAK,kBAAM,gCAgBXG,MAdf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,WAAD,CAAUC,SAAU,kBAAC9C,EAAA,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOQ,KAAK,QAAQC,UAAWP,IAC/B,kBAAC,IAAD,CAAOM,KAAK,UAAUC,UAAWN,QCX3CO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJjD,SAASkD,eAAe,W","file":"static/js/main.d6d6bcbe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: inherit;\n`;\n\nconst Load = styled.div`\n  display: block;\n`;\n\nconst loading = keyframes`\n0% {\n    transform: translate(0, 0);\n  }\n  50% {\n    transform: translate(0, 20px);\n  }\n  100% {\n    transform: translate(0, 0);\n  }\n`;\n\nconst Line = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  background-color: #e2dbc9;\n  margin-left: 6px;\n  animation: ${loading} 0.6s\n    ${(props) => (props.first ? \"0.1s\" : props.second ? \"0.2s\" : \"0.3s\")} linear\n    infinite;\n`;\n\nconst Loading = () => {\n  return (\n    <Wrapper>\n      <Load>\n        <Line first></Line>\n        <Line second></Line>\n        <Line last></Line>\n      </Load>\n    </Wrapper>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Context from \"./Context\";\n\nconst activeElem = document.getElementsByClassName(\"selected\");\n\nconst handleSelect = (e) => {\n  Array.from(activeElem).forEach((el) => el.classList.remove(\"selected\"));\n  e.target.classList.add(\"selected\");\n};\n\nconst Provider = ({ children }) => {\n  let [test, setTest] = useState([]);\n  let [isLoaded, setLoad] = useState(false);\n  let [index, setIndex] = useState(0);\n  let [res, setRes] = useState([]);\n\n  const handleClick = (value) => {\n    getTest(value);\n  };\n\n  const handleNext = () => {\n    const { results } = test;\n    const { correct_answer } = results[index];\n    setRes([\n      ...res,\n      activeElem[0] !== undefined\n        ? correct_answer === activeElem[0].innerHTML\n        : false,\n    ]);\n    Array.from(activeElem).forEach((el) => el.classList.remove(\"selected\"));\n    setIndex(++index);\n  };\n\n  const reset = () => {\n    setTest([]);\n    setRes([]);\n    setLoad(false);\n    setIndex(0);\n  };\n\n  const getTest = async (category) => {\n    await fetch(`https://opentdb.com/api.php?amount=10&category=${category}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setTest(res);\n        setLoad(true);\n      });\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        handleClick,\n        test,\n        isLoaded,\n        index,\n        handleNext,\n        reset,\n        handleSelect,\n        res,\n      }}\n    >\n      <Router>{children}</Router>\n    </Context.Provider>\n  );\n};\n\nexport default Provider;\n","import React, { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\nimport \"./app.css\";\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Test = lazy(() => import(\"./pages/Test\"));\nconst Result = lazy(() => import(\"./pages/Result\"));\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Suspense fallback={<Loading />}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/test\" component={Test} />\n          <Route path=\"/result\" component={Result} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Provider from \"./contexts/Provider\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}