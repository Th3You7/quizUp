{"version":3,"sources":["components/Button.js","utils/createMarkup.js","components/Answer.js","utils/shuffle.js","components/Question.js","pages/Test.js"],"names":["Btn","styled","button","Button","children","onClick","createMarkup","markup","__html","Wrapper","div","Answer","content","handleSelect","useContext","Context","dangerouslySetInnerHTML","shuffle","a","i","length","j","Math","floor","random","QuestionNum","p","Num","span","Quest","Question","test","index","results","type","correct_answer","incorrect_answers","question","answers","map","item","key","Test","isLoaded","handleNext","history","useHistory","push","Loading"],"mappings":"ugBAGA,IAAMA,E,KAAMC,EAAOC,OAAV,KAsBMC,IAJA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,OAAO,kBAACL,EAAD,CAAKK,QAASA,GAAUD,K,wFClBlBE,EAJM,SAACC,GACpB,MAAO,CAAEC,OAAQD,I,8RCInB,IAAME,EAAUR,IAAOS,IAAV,KAsBEC,EAVA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRC,EAAiBC,qBAAWC,KAA5BF,aACR,OACE,kBAACJ,EAAD,CACEO,wBAAyBV,EAAaM,GACtCP,QAASQ,KCdAI,MARf,SAAiBC,GACf,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACrC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADL,EAEtB,CAACD,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFkC,KAE9BD,EAAEG,GAF4B,KAIvC,OAAOH,G,2iBCCT,IAAMO,EAAcxB,IAAOyB,EAAV,KAQXC,EAAM1B,IAAO2B,KAAV,KAKHC,EAAQ5B,IAAOyB,EAAV,KA+BII,EAtBE,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAChBC,GADqC,EAAd5B,QACX0B,EAAZE,SADqC,EAEOA,EAAQD,GAApDE,EAFqC,EAErCA,KAAMC,EAF+B,EAE/BA,eAAgBC,EAFe,EAEfA,kBACtBC,EAAaJ,EAAQD,GAArBK,SACFC,EACK,YAATJ,EACI,CAAC,OAAQ,SACTjB,EAAQ,CAACkB,GAAF,mBAAqBC,KAElC,OACE,oCACE,kBAACX,EAAD,KACE,kBAACE,EAAD,iBAAeK,EAAQ,GADzB,OAGA,kBAACH,EAAD,CAAOb,wBAAyBV,EAAa+B,KAC5CC,EAAQC,KAAI,SAACC,EAAMR,GAClB,OAAO,kBAAC,EAAD,CAAQS,IAAKT,EAAOpB,QAAS4B,S,+MCpC5C,IAAM/B,EAAUR,IAAOS,IAAV,KA+BEgC,UAtBF,WAAO,IAAD,EAC6B5B,qBAAWC,KAAjD4B,EADS,EACTA,SAAUZ,EADD,EACCA,KAAMa,EADP,EACOA,WAAYZ,EADnB,EACmBA,MAC9Ba,EAAUC,cAMhB,OAAKH,EAID,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUZ,KAAMA,EAAMC,MAAOA,IAC7B,kBAAC7B,EAAA,EAAD,CAAQE,QAAmB,IAAV2B,EAXJ,WACjBY,IACAC,EAAQE,KAAK,YASmCH,GAC/B,IAAVZ,EAAc,aAAe,SAN7B,kBAACgB,EAAA,EAAD","file":"static/js/5.7388f41d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Btn = styled.button`\n  outline: 0;\n  border: none;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  margin: 32px 0;\n  padding: 16px 32px;\n  color: white;\n  background: #34aec3;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 999px;\n  cursor: pointer;\n`;\n\nconst Button = ({ children, onClick }) => {\n  return <Btn onClick={onClick}>{children}</Btn>;\n};\n\nexport default Button;\n","const createMarkup = (markup) => {\n  return { __html: markup };\n};\n\nexport default createMarkup;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport createMarkup from \"../utils/createMarkup\";\nimport Context from \"../contexts/Context\";\n\nconst Wrapper = styled.div`\n  padding: 16px;\n  margin-bottom: 12px;\n  border: 3px solid #373d46;\n  border-radius: 12px;\n  color: #b1b1b1;\n  font-size: 16px;\n  font-weight: 400;\n  text-transform: capitalize;\n  cursor: pointer;\n`;\n\nconst Answer = ({ content }) => {\n  const { handleSelect } = useContext(Context);\n  return (\n    <Wrapper\n      dangerouslySetInnerHTML={createMarkup(content)}\n      onClick={handleSelect}\n    />\n  );\n};\n\nexport default Answer;\n","function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default shuffle;\n","import React from \"react\";\nimport Answer from \"../components/Answer\";\nimport styled from \"styled-components\";\nimport shuffle from \"../utils/shuffle\";\nimport createMarkup from \"../utils/createMarkup\";\n\nconst QuestionNum = styled.p`\n  color: #373d46;\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 4px dashed #373d46;\n`;\nconst Num = styled.span`\n  font-size: 32px;\n  color: #b1b1b1;\n  font-weight: 600;\n`;\nconst Quest = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  min-height: 100px;\n  margin: 0 0 8px 0;\n  color: #f1f1f1;\n  text-transform: capitalize;\n`;\n\nconst Question = ({ test, index, onClick }) => {\n  const { results } = test;\n  const { type, correct_answer, incorrect_answers } = results[index];\n  const { question } = results[index];\n  const answers =\n    type === \"boolean\"\n      ? [\"True\", \"False\"]\n      : shuffle([correct_answer, ...incorrect_answers]);\n\n  return (\n    <>\n      <QuestionNum>\n        <Num>Question {index + 1}</Num>/10\n      </QuestionNum>\n      <Quest dangerouslySetInnerHTML={createMarkup(question)}></Quest>\n      {answers.map((item, index) => {\n        return <Answer key={index} content={item} />;\n      })}\n    </>\n  );\n};\n\nexport default Question;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport Button from \"../components/Button\";\nimport Loading from \"../components/Loading\";\nimport Context from \"../contexts/Context\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  height: 100vh;\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Test = () => {\n  const { isLoaded, test, handleNext, index } = useContext(Context);\n  const history = useHistory();\n  const resultPath = () => {\n    handleNext();\n    history.push(\"/result\");\n  };\n\n  if (!isLoaded) {\n    return <Loading />;\n  } else {\n    return (\n      <Wrapper>\n        <Question test={test} index={index} />\n        <Button onClick={index === 9 ? resultPath : handleNext}>\n          {index === 9 ? \"See Result\" : \"Next\"}\n        </Button>\n      </Wrapper>\n    );\n  }\n};\n\nexport default Test;\n"],"sourceRoot":""}